{"version":3,"sources":["../node_modules/h8k-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/kanban-board/index.js","App.js","registerServiceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","KanbanBoard","Component","constructor","props","super","moveToStage","task","stage","stateCopy","this","state","tasks","newTaskStage","index","indexOf","setState","moveToForward","moveToBack","stagesNames","componentDidMount","console","log","render","stagesTasks","i","length","push","React","createElement","className","key","data-testid","name","split","join","disabled","onClick","App","header","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","applyPolyfills","defineCustomElements"],"mappings":"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","file":"static/js/main.4f8d3064.chunk.js","sourcesContent":["var map = {\n\t\"./h8k-logo_2.entry.js\": [\n\t\t18,\n\t\t2\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 13;\nmodule.exports = webpackAsyncContext;","import React, { Component } from \"react\";\nimport \"./index.css\";\n\nexport default class KanbanBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: props.tasks\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Done'];\n  }\n\n  componentDidMount() {\n    console.log()\n  }\n\n  moveToStage = (task, stage) => {\n    const stateCopy = [...this.state.tasks];\n    const newTaskStage = { ...task, stage: stage };\n\n    const index = stateCopy.indexOf(task);\n    stateCopy[index] = newTaskStage;\n    this.setState({\n      tasks: stateCopy\n    })\n  }\n\n  moveToForward = (task) => {\n    this.moveToStage(task, task.stage + 1);\n\n  }\n\n  moveToBack = (task) => {\n    this.moveToStage(task, task.stage - 1);\n  }\n\n  render() {\n    const { tasks } = this.state;\n\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; ++i) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"li-content layout-row justify-content-between align-items-center\">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <div className=\"icons\">\n                            <button disabled={task.stage === 0} onClick={() => this.moveToBack(task)} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button disabled={task.stage === this.stagesNames.length - 1} onClick={() => this.moveToForward(task)} className=\"icon-only x-small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport KanbanBoard from './components/kanban-board/index.js';\nimport 'h8k-components';\n\nconst title = \"Kanban Board\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h8k-navbar header={title}></h8k-navbar>\n        <KanbanBoard tasks={this.props.tasks} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { applyPolyfills, defineCustomElements } from 'h8k-components/loader';\n\n\n\nReactDOM.render(<App tasks={[\n    { name: 'task 0', stage: 0 },\n    { name: 'task 1', stage: 0 },\n    { name: 'task 2', stage: 0 },\n    { name: 'task 3', stage: 0 },\n    { name: 'task 4', stage: 1 },\n    { name: 'task 5', stage: 1 },\n    { name: 'task 6', stage: 1 },\n    { name: 'task 7', stage: 2 },\n    { name: 'task 8', stage: 2 },\n    { name: 'task 9', stage: 3 },\n]} />, document.getElementById('root'));\nregisterServiceWorker();\n\napplyPolyfills().then(() => {\n    defineCustomElements(window);\n})"],"sourceRoot":""}